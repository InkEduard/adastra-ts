const i=Object.freeze({routes:{cart_get_url:"/cart.js",cart_add_url:"/cart/add.js",cart_change_url:"/cart/change.js",cart_update_url:"/cart/update.js",cart_clear_url:"/cart/clear.js"},fetchConfig:(a="POST",t="json")=>({method:a,headers:{"Content-Type":"application/json",Accept:`application/${t}`}})});class n extends Error{constructor(t,e){super(t),this.response=e}}async function u(a,t){const e=await fetch(a,t);if(!e.ok){const r=await e.json(),s=(r==null?void 0:r.errors)||(r==null?void 0:r.message)||e.statusText;throw new n(s,e)}return e}const p=a=>{a.store("drawerCartState",{minicartOpen:!1,showMinicartOverlay:!1}),a.data("cart",()=>({added:!1,loading:!1,disabled:!1,formData:{quantity:1,productId:null},init(){window.addEventListener("update-cart",({detail:t})=>{this.updateCartItem(t.cartLine,t.quantity,t.isMinicart)})},setHeightMinicart(t){const e=this.$refs.minicartHeader.offsetHeight,r=this.$refs.minicartFooter.offsetHeight;t&&(this.$refs.minicartItems.style.height=`calc(100dvh - ${e}px - ${r}px)`)},async add(){this.loading=!0,this.disabled=!0;try{const t=await this._addToCart();this.successHandler(t),this.$store.drawerCartState.minicartOpen=!0}catch(t){t instanceof n&&this.$dispatch("notice",{type:"error",text:`${t.response.statusText} (${t.response.status}): ${t.message}`}),this._errorHandler()}},async _addToCart(){return await u(i.routes.cart_add_url,{...i.fetchConfig(),body:JSON.stringify({items:[{id:this.formData.productId,quantity:this.formData.quantity}],sections:`${this.getDrawerCartSectionId()},header`})})},async updateCartItem(t,e,r){if(!(e<1))try{const s=await this._updateCartItem(t,e);this.successHandler(s,r)}catch(s){s instanceof n&&this.$dispatch("notice",{type:"error",text:`${s.response.statusText} (${s.response.status}): ${s.message}`}),this._errorHandler()}},async removeCartItem(t,e){try{const r=await this._updateCartItem(t,0);this.successHandler(r,e)}catch(r){r instanceof n&&this.$dispatch("notice",{type:"error",text:`${r.response.statusText} (${r.response.status}): ${r.message}`}),this._errorHandler()}},getCartSectionId(){const t=document.querySelector(".section-cart");if(t){let e=t.getAttribute("id");return e?e.replace("shopify-section-",""):""}},getDrawerCartSectionId(){const t=document.querySelector(".section-drawer-cart");if(t){let e=t.getAttribute("id");return e?e.replace("shopify-section-",""):""}},async _updateCartItem(t,e){const r={line:t,quantity:e,sections:`${this.getCartSectionId()},${this.getDrawerCartSectionId()},header`};return await u(i.routes.cart_change_url,{...i.fetchConfig(),body:JSON.stringify(r)})},async successHandler(t,e,r){const s=r||await t.json(),c="[data-cart-count]",o=document.getElementById(`shopify-section-${this.getCartSectionId()}`);o&&a.morph(o,s.sections[this.getCartSectionId()]);const d=document.getElementById(`shopify-section-${this.getDrawerCartSectionId()}`);d&&a.morph(d,s.sections[this.getDrawerCartSectionId()]);const h=new DOMParser().parseFromString(s.sections.header,"text/html").querySelector(c);h&&(document.querySelector(c).innerHTML=h.innerHTML),this.formData.quantity=1,this.added=!0,this.loading=!1,setTimeout(()=>{this.added=!1,this.disabled=!1,e&&this.setHeightMinicart(!0)},2e3)},_errorHandler(){this.formData.quantity=1,this.loading=!1,this.disabled=!1}}))};export{p as default};
