{% comment %}
  Renders variants

  Accepts:
  - splitted_products: {Boolean} Splitted products (Optional)
  - prefix: {String} Needed for variants initialize
  - option_name: {String}

  Usage:
  {% render 'product-variant-splitted' %}
{% endcomment %}

{% for splitted_product in splitted_products.value %}
  {% liquid
    assign title_parts = splitted_product.title | split: '| '
    assign splitted_product_color = title_parts | slice: 1 | first
    assign splitted_product_color_downcased = splitted_product_color | downcase

    for variant in splitted_product.variants
      assign available_on_date = variant.metafields.custom.available_on_date
      if available_on_date != null
        assign available_on_date = available_on_date | date: '%m/%d/%Y' | append: '"' | prepend: '"'
        assign variant_id = variant.id | append: '"' | prepend: '"'
        assign back_in_stock_data = back_in_stock_data | append: variant_id | append: ': ' | append: available_on_date | append: ', '
      endif
    endfor
  %}

  {% if prefix == 'main' %}
    <script type="application/json" x-ref="variants-back-in-stock-date">
      {{- back_in_stock_data | remove_last: ', ' -}}
    </script>
  {% endif %}

  <label
    {% if option_name contains 'color' %}
      {%- render 'product-variant-color', value: splitted_product_color_downcased, product: splitted_product -%}
    {% endif %}
    class="
      variant group relative inline-flex cursor-pointer items-center justify-center border border-gray-light text-center has-[:disabled]:pointer-events-none has-[:disabled]:overflow-hidden has-[:disabled]:border-gray-light has-[:disabled]:bg-[#f5f5f5] has-[:disabled]:text-gray has-[:disabled]:after:absolute has-[:disabled]:after:left-0 has-[:disabled]:after:right-0 has-[:disabled]:after:top-1/2 has-[:disabled]:after:h-px has-[:disabled]:after:rotate-45 has-[:disabled]:after:bg-[#d2cfcd]
      {% if option_name contains 'color' %}
        bg-cover bg-no-repeat bg-center rounded-full text-[0] h-7.5 w-7.5 transition-all md:h-6.5 md:w-6.5 lg:hover:border-2 lg:hover:border-primary lg:hover:scale-125
      {% else %}
        uppercase -ml-px text-xs text-primary p-2.75 basis-1/4 transition-all mt-1.5 lg:hover:bg-primary lg:hover:text-white lg:hover:border-primary
      {% endif %}
    "
    for="splitted-product-{{ splitted_product.id }}-{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
  >
    {% if option_name contains 'color' %}
      <div class="variant-tooltip pointer-events-none absolute bottom-[calc(100%+13px)] left-1/2 z-10 hidden min-h-32 w-24 -translate-x-1/2 rounded border border-primary bg-white p-1.25 pb-2 text-left text-primary opacity-0 transition-opacity after:absolute after:-bottom-1 after:left-[calc(50%-4px)] after:h-2 after:w-2 after:rotate-[225deg] after:border-l after:border-t after:border-primary after:bg-white lg:block lg:group-hover:pointer-events-auto lg:group-hover:opacity-100">
        <div
          class="h-[74px] w-[84px] border border-gray-light bg-cover bg-center bg-no-repeat"
          {%- render 'product-variant-color', value: splitted_product_color_downcased, product: splitted_product -%}
        ></div>
        <div class="mt-1.5 text-xs">{{ splitted_product_color }}</div>
        <div class="mt-1 text-xxs font-medium">click to view</div>
      </div>
    {% endif %}
    <input
      :checked="splittedSelectedValue === '{{ splitted_product_color | replace: '"', '&quot;' }}'"
      @click="onSplittedVariantChange('{{ splitted_product_color | replace: '"', '&quot;' }}', '{{ option_name }}', '{{ prefix }}')"
      class="hidden"
      type="radio"
      id="splitted-product-{{ splitted_product.id }}-{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
      value="{{ splitted_product_color }}"
    >
  </label>
{% endfor %}

{% style %}
  fieldset:not(.color) .variant:has(input[checked]) {
    background-color: rgba(var(--color-primary));
    border-color: rgba(var(--color-primary));
    color: #fff;
  }

  fieldset.color .variant:has(input[checked]) {
    border-color: rgba(var(--color-primary));
    border-width: 2px;
  }
{% endstyle %}
